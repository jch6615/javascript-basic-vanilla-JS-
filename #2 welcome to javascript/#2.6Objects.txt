//여기까지의 강의에서 console.log , listname.push 등
//여러 xxx.xx의 형태를 보았다.

//저번 강의에서는 list(Array)안에 데이터를 넣어 관리하는것을 배웠다.
//하지만, 때로는 Object를 만들어야 할때가 있다.
//Object가 어떤건지를 알기전에, 만약 Object가 없다면 어떻게 되나?
//게임 캐릭터를 만든다고 가정해보자.

const playerName = "nico";
const playerPoints = 121212;
const playerHandsome = false;
const playerFat = "little bit";
//이렇게 따로따로의 변수로 캐릭터에 대한 내용을 변수로 지정해야한다.
//Name, Points, Handsome, Fat은 모두 한개의 개채(Entity),
//즉, player에 대해서 설명하고 있는 특성들이다.
//그러므로...

// player.name
// player.points
// player.handsome
//과 같이 지정하고 싶다. But HOW??
//변수 지정과 Array로 리스트화 하는건 적합하지 않다.
//const player = ["nico", 121212, false, "little bit"];
//과 같이 있으면 각 요소들이 무엇을 의미하는지 모른다.
//주석을 이용하여 설명 할 수 는 있지만 더 좋은 방법이 있다.

//which is Object!
const player = {
    name: "nico",
    points: 10,
    fat: true,
};
console.log(player);

//property를 불러오는 데에는 2개의 방법이 있다. ex) name 을 불러내자.
console.log(player.name);
console.log(player["name"]);
//지금까지 사용한 console.log의 경우에도 console 이라는 Object에 log라는 property가 있는것.

//we can also udpate the object!
player.points = player.points + 15;
player.fat = false;
console.log(player);

//!! const 이면 수정이 불가능 하지 않나 ??
// const로 지정한 변수 자체를 바꾸는것이 아닌 안의 내용을 수정하는것은 상관이 없다.

//We can also add property!
player.lastName = "potato";
console.log(player);